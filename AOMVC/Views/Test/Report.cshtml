@model LibAOModels.Test
@{
    ViewBag.Title = "Rapport";
}

<h1>Rapport</h1>
<hr class="nomarginbottom" />

<section id="testinfo">
    <h2 class="noselect toggleInfo clickable">Informatie Over De Test</h2>
    <section id="test">
        <section class="span6">
        <h3>Test</h3>
            <dl class="dl-horizontal">
                <dt>Module</dt>
                <dd>@Model.Routine.Name</dd>
                <dt>Techniek</dt>
                <dd>@Model.Kind</dd>
                <dt>Juist/Fout</dt>
                <dd>@Model.Results.Where(m => m.Value == 1).Count()/@Model.Results.Where(m => m.Value == 0).Count() </dd>
                <dt>Opmerking</dt>
                <dd>@Html.Raw(System.Web.HttpUtility.HtmlDecode(Model.Comment))</dd>
            </dl>
        </section>
        <section class="span5">
            <h3>Info</h3>
            <dl class="dl-horizontal">
                <dt>Aangemaakt</dt>
                <dd>@Html.DisplayFor(m => m.Createddate, "LocalDatetime")</dd>
                <dt>Afgerond</dt>
                <dd>@Html.DisplayFor(m => m.Finisheddate, "LocalDatetime")</dd>
                <dt>Geanalyseerd</dt>
                <dd>@Html.DisplayFor(m => m.Analyseddate, "LocalDatetime")</dd>
                <dt>Voor normering</dt>
                <dd>@(Model.ForStatistics==1?"Ja":"Nee")</dd>
            </dl>
        </section>
    </section>
    <section id="info" class="clear">
        <section id="childinfo" class="span6">
            <h3>Kind</h3>
            <dl class="dl-horizontal">
                <dt>Naam</dt>
                <dd>@Model.User.Firstname @Model.User.Surname</dd>
                <dt>Email</dt>
                <dd>@Model.User.Email</dd>
                <dt>Geboortedatum</dt>
                <dd>@Model.User.DateOfBirth</dd>
                <dt>Ingeschreven door</dt>
                <dd>@Model.User.AdminEnrolled.Firstname @Model.User.AdminEnrolled.Surname</dd>
                <dt>Aantal testen</dt>
                <dd>@Model.User.TestsTaken.Count()</dd>
            </dl>
        </section>
        <section id="admininfo" class="span6">
            <h3>Logopedist</h3>
            <dl class="dl-horizontal">
                <dt>Naam</dt>
                <dd>@Model.Admin.Firstname @Model.Admin.Surname</dd>
                <dt>Email</dt>
                <dd>@Model.Admin.Email</dd>
            </dl>
        </section>
    </section>
    <section class="clear"></section>
</section>
<section>
    <section id="phoneticinfo" class="span6">
        <h3>Fonetisch</h3>
        <table class="table">
            @for (int i = 0; i < ViewBag.Count.Count; i++)
            {
                if (@ViewBag.Count[i] != 0)
                {
                    <tr>
                        <td>@ViewBag.Names[i]</td>
                        <td>@ViewBag.Count[i]</td>
                    </tr>
                }
            }
        </table>
    </section>
    <section id="score" class="span6">
        <h3>Opmerkingen</h3>
        @Html.TextAreaFor(m => m.Comment, new { @id = "remarks"})
    </section>
</section>
<button class="btn right" onclick="send()">Afronden</button>
@section Scripts{
    @Scripts.Render("~/bundles/editor")
    <script>
        var _root = "http://" + window.location.host.toString() + "/";

        $(document).ready(function () {
            tinymce.init({
                selector: "textarea#remarks",
                theme: "advanced",
                width: 400,
                height: 300,
                //content_css: "css/content.css",
                toolbar: "undo redo | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | forecolor backcolor | hr code",
            });
            
        })
        function send() {
            var cont = tinyMCE.activeEditor.getContent();
            var fd = new FormData();
            fd.append("id", @ViewBag.Test);
            fd.append("remark", cont);
            var xhr = new XMLHttpRequest();
            xhr.addEventListener("load", function (evt) {
                if(evt.currentTarget.responseText == "200")
                {
                    window.location = _root + "Home/Index"
                }
            }, false);
            xhr.addEventListener("error", function (evt) {
                console.log("There was an error getting the values of the test.");
            }, false);
            xhr.addEventListener("abort", function (evt) {
                console.log("The retrieval has been canceled by the user or the browser dropped the connection.");
            }, false);
            xhr.open("POST", _root + "Test/SaveReport");
            xhr.send(fd);
        }

    </script>
}